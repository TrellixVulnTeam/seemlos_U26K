# Generated by Django 2.2.11 on 2020-10-28 07:57

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Encounter',
            fields=[
                ('provider_org', models.CharField(db_column='Provider_Org', max_length=40)),
                ('ecounter_id', models.CharField(db_column='Ecounter_ID', max_length=40, primary_key=True, serialize=False)),
                ('member_id', models.CharField(db_column='Member_ID', max_length=40)),
                ('provider_id', models.CharField(db_column='Provider_ID', max_length=40)),
                ('provider_npi', models.CharField(db_column='Provider_NPI', max_length=40)),
                ('clinic_id', models.CharField(db_column='Clinic_ID', max_length=65)),
                ('encounter_datetime', models.DateTimeField(db_column='Encounter_DateTime')),
                ('encounter_description', models.CharField(db_column='Encounter_Description', max_length=90)),
                ('cc', models.CharField(max_length=90)),
                ('episode_id', models.CharField(db_column='Episode_ID', max_length=25)),
                ('patient_dob', models.DateField(db_column='Patient_DOB')),
                ('patient_gender', models.CharField(db_column='Patient_Gender', max_length=10)),
                ('facility_name', models.CharField(db_column='Facility_Name', max_length=20)),
                ('provider_name', models.CharField(db_column='Provider_Name', max_length=30)),
                ('speciality', models.CharField(db_column='Speciality', max_length=30)),
                ('clinic_type', models.CharField(db_column='Clinic_Type', max_length=20)),
                ('lab_orders_count', models.IntegerField(db_column='Lab_orders_count')),
                ('lab_results_count', models.IntegerField(db_column='Lab_results_count')),
                ('medication_orders_count', models.IntegerField()),
                ('medication_fulfillment_count', models.IntegerField()),
                ('vital_sign_count', models.IntegerField()),
                ('therapy_orders_count', models.IntegerField()),
                ('therapy_actions_count', models.IntegerField()),
                ('immunization_count', models.IntegerField()),
                ('has_appt', models.IntegerField(db_column='Has_Appt')),
                ('soap_note', models.CharField(db_column='SOAP_Note', max_length=1600)),
                ('consult_ordered', models.CharField(max_length=20)),
                ('disposition', models.CharField(db_column='Disposition', max_length=30)),
            ],
            options={
                'db_table': 'encounter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestTable',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('age', models.IntegerField(db_column='Age')),
                ('name', models.CharField(db_column='Name', max_length=20)),
            ],
            options={
                'db_table': 'test_table',
                'managed': False,
            },
        ),
    ]
